#!/bin/bash

# A set of common functions to be re-used by the various builder tools

# Timestamp for use in things like database backup filenames
NOW=$(date +%Y%m%d%H%M%S)

# Copy the /etc/mysql/debian.cnf to /home/vagrant/.my.cnf so we can perform
# various MySQL commands without worrying about credentials
if [ ! -f /home/vagrant/.my.cnf ]; then
  sudo cp /etc/mysql/debian.cnf /home/vagrant/.my.cnf
  sudo chown vagrant:vagrant /home/vagrant/.my.cnf
fi

# Check we are running with root privileges. Is this really necessary though?
check_user() {
  if [ ! `whoami` = "root" ] ; then
    echo "You must run this script as root or with sudo!"
    exit 1
  fi
}

# A simple color function to report errors in red
color() {
  printf '\033[%sm%s\033[m\n' "$@"
 # usage color "31;5" "error message"
 # 0 default
 # 5 blink, 1 strong, 4 underlined
 # fg: 31 red,  32 green, 33 yellow, 34 blue, 35 purple, 36 cyan, 37 white
 # bg: 40 black, 41 red, 44 blue, 45 purple
}


# Restart Nginx
restart_nginx() {
  sudo /etc/init.d/nginx restart
}


###
# Used by builder-install and builder-update
###

# Are we working with the standard 'www' subfolder? Or is this something like an Acquia repo?
check_for_www_subdirectory() {
  
  # Start assuming there's no subfolder for www,
  # and adjust if one is found
  WWWSUBDIR="."

  # 'www' subfolder? (typical)
  stat /vagrant/$SITE/www > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    WWWSUBDIR="www"
  fi

  # 'docroot' subfolder? (Acquia git)
  stat /vagrant/$SITE/docroot > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    WWWSUBDIR="docroot"
  fi
}

# Generate random password, used for MySQL grants
genpasswd() {
  local l=$1
  [ "$l" == "" ] && l=16
  tr -dc A-Za-z0-9_ < /dev/urandom | head -c ${l} | xargs
}
